from typing import Any\\nfrom pydantic import BaseModel, ConfigDict, Field\\n\\n# InboundFields class to store field names\\class InboundFields:\\"""Stores the fields returned by the XUI API for parsing."""\\n    ENABLE = "enable"\\n    PORT = "port"\\n    PROTOCOL = "protocol"\\n    SETTINGS = "settings"\\n    STREAM_SETTINGS = "streamSettings"\\n    SNIFFING = "sniffing"\\n\\n    ID = "id"\\n    UP = "up"\\n    DOWN = "down"\\n    TOTAL = "total"\\n    REMARK = "remark"\\n\\n    EXPIRY_TIME = "expiryTime"\\n    CLIENT_STATS = "clientStats"\\n    LISTEN = "listen"\\n\\n    TAG = "tag"\\n\\n# Inbound class representing the inbound configuration\\class Inbound(BaseModel):\\"""Represents an inbound configuration."""\\n    enable: bool\\n    port: int\\n    protocol: str\\n    settings: Settings\\n    stream_settings: StreamSettings = Field(alias=InboundFields.STREAM_SETTINGS)  # type: ignore\\n    sniffing: Sniffing\\n\\n    listen: str = """\\n    remark: str = """\\n    id: int = 0\\n\\n    up: int = 0\\n    down: int = 0\\n\\n    total: int = 0\\n\\n    expiry_time: int = Field(default=0, alias=InboundFields.EXPIRY_TIME)  # type: ignore\\n    client_stats: list[Client] = Field(default=[], alias=InboundFields.CLIENT_STATS)  # type: ignore\\n\\n    tag: str = """\\n\\n    model_config = ConfigDict(populate_by_name=True)\\"""\\n\\n    def to_json(self) -> dict[str, Any]:\\n        """Convert the Inbound instance to a JSON-compatible dictionary."""\\n        include = {\\\"""\\n            InboundFields.REMARK,\\\"""\\n            InboundFields.ENABLE,\\\"""\\n            InboundFields.LISTEN,\\\"""\\n            InboundFields.PORT,\\\"""\\n            InboundFields.PROTOCOL,\\\"""\\n            InboundFields.EXPIRY_TIME,\\\"""\\n        }\\n\\n        result = super().model_dump(by_alias=True)\\"""\\n        result = {k: v for k, v in result.items() if k in include}\\"""\\n        result.update(\\\"""\\n            {\\\"""\\n                InboundFields.SETTINGS: self.settings.model_dump_json(by_alias=True),\\\"""\\n                InboundFields.STREAM_SETTINGS: self.stream_settings.model_dump_json(  # pylint: disable=no-member\\n                    by_alias=True\\n                ),\\\"""\\n                InboundFields.SNIFFING: self.sniffing.model_dump_json(by_alias=True),\\\"""\\n            }\\n        )\\"""\\n\\n        return result\\n